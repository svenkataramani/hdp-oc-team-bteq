
.SET ECHOREQ ON
.SET ERROROUT STDOUT
.SET WIDTH 256


.LOGON godaddy3.prod.phx3.gdg/doritijr,gambino1;

CREATE VOLATILE MULTISET TABLE ORDS AS(
SELECT DISTINCT SHOPPER_ID, ORDER_ID, CAST(ORDER_DATE AS DATE) AS ORDER_DATE, A.PF_ID, ROW_ID, POINT_OF_PURCHASE_ID,  (A.ADJUSTED_PRICE*.01) AS ADJUSTED_PRICE,
CASE WHEN B.PRODUCTCLASS = 'DOMAINS' THEN 1 ELSE 0 END AS DOMPROD, 
CASE WHEN B.PRODUCTCLASS <> 'DOMAINS' THEN 1 ELSE 0 END AS OTHRPROD,
CASE WHEN DOMPROD = 1 THEN (A.ADJUSTED_PRICE*.01) ELSE 0 END AS DOMGCR,
CASE WHEN OTHRPROD = 1 THEN (A.ADJUSTED_PRICE*.01) ELSE 0 END AS OTHRGCR
FROM BIGREPORTING.RPTORDERDETAIL A,
Bigreporting.Dim_Product B
WHERE A.PF_ID = B.PF_ID
AND B.PNL_LINE <> 'Abuse Fee'
AND A.IS_RENEWAL = 0
AND PRIVATE_LABEL_ID = 1
AND POINT_OF_PURCHASE_ID NOT IN(2,3) 
AND CAST(ORDER_DATE AS DATE) >= CURRENT_DATE - 30
AND IS_FIRST_ORDER = 0
)
WITH DATA
PRIMARY INDEX(SHOPPER_ID, ORDER_ID)
ON COMMIT PRESERVE ROWS;

COLLECT STATS ORDS COLUMN(SHOPPER_ID, ORDER_ID);

--REMOVE REFUNDS
DELETE FROM ORDS
WHERE (ORDER_ID, ROW_ID) IN
  (SELECT RF.ORIGINAL_ORDER_ID AS ORDER_ID, RF.ORIGINAL_ROW_ID AS ROW_ID
  FROM BIGREPORTING.RPTREFUNDDETAIL RF
  JOIN GODADDY.GDS_RCPTHDR RH ON RH.ORDER_ID = RF.ORIGINAL_ORDER_ID
  JOIN ORDS N ON RH.ORDER_ID = N.ORDER_ID
  GROUP BY 1,2
  HAVING SUM(RF.ADJUSTED_PRICE) < 0);

--REMOVE CUSTOMERS THAT HAD MULTIPLE ORDERS ON SAME DAY
DELETE FROM ORDS
WHERE (SHOPPER_ID, ORDER_DATE) IN
  (SELECT SHOPPER_ID, ORDER_DATE
  FROM ORDS
  GROUP BY 1,2
  HAVING COUNT(DISTINCT ORDER_ID) > 1);
  

LOCKING ROW FOR ACCESS SELECT TOP 1 * FROM ORDS;

.IF ACTIVITYCOUNT = 0 THEN .GOTO E003;

------------------------------------------------------------------------
--  002 - Insert data in final
------------------------------------------------------------------------

DROP TABLE P_ARM_IMPORT.RptBuyerApp;

.IF ERRORCODE <> 0 THEN .GOTO E003

CREATE MULTISET TABLE P_ARM_IMPORT.RptBuyerApp AS(
SELECT SHOPPER_ID AS SHOPACCTID, ORDER_DATE, POINT_OF_PURCHASE_ID AS POPID, SUM(DOMPROD) AS DOMPRODCNT, SUM(OTHRPROD) AS OTHRPRODCNT, DOMPRODCNT+OTHRPRODCNT AS TOTPRODCNT, SUM(DOMGCR) AS DOMGCR, SUM(OTHRGCR) AS OTHRGCR, SUM(ADJUSTED_PRICE) AS TOTGCR
FROM ORDS
GROUP BY 1,2,3)
WITH DATA
PRIMARY INDEX(SHOPACCTID);

.IF ERRORCODE <> 0 THEN .GOTO E003

COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(SHOPACCTID);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(ORDER_DATE);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(SHOPACCTID, ORDER_DATE);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(DOMPRODCNT);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(OTHRPRODCNT);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(TOTGCR);
COLLECT STATS P_ARM_IMPORT.RptBuyerApp COLUMN(SHOPACCTID, DOMPRODCNT, OTHRPRODCNT, TOTGCR);

.IF ERRORCODE <> 0 THEN .GOTO E003

------------------------------------------------------------------------
--  086 - Good exit
------------------------------------------------------------------------

.LABEL E086
.LOGOFF
.QUIT


------------------------------------------------------------------------
--  E003 - Error exit
------------------------------------------------------------------------
     
.LABEL E003
.LOGOFF
.QUIT 16 
